// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt
  email      String   @unique
  username   String   @unique
  password   String   @unique
  contact    String?  @unique
  name       String?
  idCard     String?
  isVerified Boolean  @default(false)
  books      Book[]
  token      Token[]
}

model Admin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  email      String   @unique
  username   String   @unique
  name       String?
  password   String   @unique
  isVerified Boolean  @default(false)
  token      Token[]
}

model Book {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  title     String   @unique
  author    String
  status    String   @default("Request")
  userID    String   @db.ObjectId
  user      User     @relation(fields: [userID], references: [id])
}

model Token {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  authToken String   @unique
  valid     Boolean
  exprTime  DateTime
  userID    String   @unique @db.ObjectId
  user      User?    @relation(fields: [userID], references: [id])
  admin     Admin?   @relation(fields: [userID], references: [id])
}

model Booklist {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  cover   String?
  title   String
  author  String
  ISBN    String  @unique
  details String
}
